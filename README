     #######    #    #    ######     #######    ######  #    #    #######
     #      #   #    #   #           #      #   #    #  #    #   #
     #     #    #    #   #           #     #    #    #  #    #   #
     #######    #    #    #####      #######    #    #  ######    #####
     #      #   #    #         #     #      #   #    #       #         #
     #       #  #    #         #     #       #  #    #       #         #
     #       #  #    #         #     #       #  #    #       #         #
     ########   ######   ######      ########   ######       #  #######

     - Benjamin Auclair
     - Bernardo Cardoso Cordeiro
     - Martin Chochod
     - Augustin Morel

************************************ README ************************************

Bienvenue dans le projet des BusBoys : le Telecom Bus Planner.
Ce Readme est conçu afin de vous aider à comprendre son fonctionnement détaillé.
Il comporte les sections suivante :
- base de données
- structure du projet
- cheminement lors de la navigation web


****************************** BASE DE DONNEES ********************************

IMPORTANT : afin de lancer le projet, vous devrez tout d'abord importer la base
de données projet_igr.sql (présente dans le dossier du projet) en créant une 
base de données nommé projet_igr, puis en cliquant sur importer ( avec par exemple 
phpMyAdmin).

Le projet étant écrit en php, vous devez également disposer d'un outil comme LAMP,
XAMP ou WAMP (pour Windows) afin de l'exécuter.

La base de données prjet_igr est constituée de 5 tables, comme suit :

- une table liste_bde : dans l'idée elle est fournie par le BDE client du service
(à l'heure actuelle Le BDE Telecom, mais à terme n'importe quel BDE client). Elle
contient la liste de tous les élèves, leur login et leur mot de passe, leur statut
(0 : non cotisant, 1 : cotisant BDE, 2 : admin BDE), et les groupes auxquels ils 
appartiennent

- une table groupes : elle contient tous les groupes créés, ainsi que les 
identifiants (uniques) vers la table liste_bde de leurs membres.
NB : l'utilisation des ID et non des noms permet de résoudre les cas des
homonymes.

-  une table voyages_dispo : elle contient la liste des voyages et leur disponibilité
à la réservation des places dans le bus.

Tables "exemples"
- la table wei : cette table serait générée automatiquement dès l'ouverture des 
réservations pour un voyage et contiendrait toutes les réservations des groupes
ainsi que leurs préférences.

- la table inscrits_wei : cette table va de pair avec la précédente et est 
l'équivalent d'une pile de vérification. Elle contient initialement la liste de 
toutes les personnes inscrites au voyage (le WEI ici), et se vide des étudiants
qui ont fait leur réservation. Elle permet d'éviter des réservations en doublon.

Il y aurait donc pour chaque voyage une table "nom_du_voyage" et une table
"inscrits_nom_du_voyage".



*********************************** STRUCTURE **********************************

Tout d'abord, nous avons implémenté notre projet selon une architecture MVC et 
avec une base de données SQL (projet_igr.sql, présent dans le dossier).
Il y a donc 3 dossiers :
- controller
- model
- view

On retrouve exactement la même liste de fichiers d'un répertoire à un autre, 
car en effet ceux-ci sont liés, selon la logique du modèle MVC.



********************************** CHEMINEMENT **********************************

On trouve ainsi le cheminement de pages web suivant :

Côté ELEVE :
			 --- enter.php --- select_voyage.php --- eleve.php --- validation.php 
login.php ---|
			 --- login_bde.php (etc.)

Côté BDE :
													 -- bde.php -- validation_bde.php
login_bde.php -- enter_bde.php -- accueil_bde.php --| 
													 -- select_voyage.php -- eleve.php


Les pages enter.php et enter_bde.php ne sont que des formulaires de contrôle 
de l'identification, et n'affichent donc rien car la redirection est immédiate.


************************************ UTILISATION ************************************

Vous pouvez vous identifier avec tous les identifiants de la base de données, comme :
- mchochod : 1234
- bauclair : 1234
- amorel : 1234
- bcardoso : 1234
- jeagan : 1234
- meperrin : 1234
- elc : 1234
etc...

Vous pourrez apprécier l'affichage personnalisé du nom, des groupes de la personne
identifiée.

Nous avons en effet essayé d'implémenter le plus possible la partie back-end de notre
 interface afin de rendre l'expérience utilisateur très agréable et au plus proche de
 la version définitive.

Il est donc possible de récupérer toutes les données d'une personne en se connectant,
mais il n'est pas encore possible d'effectuer des modifications de la base de données :

Ne sont pas implémentés pour l'instant en back-end pour la partie ETUDIANT :
- ajout d'un nouveau groupe
- suppression d'un groupe
- soumission d'une réservation de groupe

Ne sont également pas implémentés pour la partie BDE/ADMIN :
- création d'un voyage
- enregistrement du nouveau voyage

Ces actions sont pour l'instant hardcodées afin de donner un aperçu de l'interface
que nous avons pensée pour le projet, après définition des besoins utilisateurs, et 
des actions qui vont être effectuées sur le Telecom Bus Planner.



******************************* PROPOS DE L'EQUIPE *****************************

Nous aimerions souligner le fait que ce sujet nous a particulièrement intéressé, 
car sa problématique nous a concerné tout particulièrement et nous avons dès lors 
souhaité trouver une solution durable à ce problème. Dans cette optique, et dans 
la mesure de notre disponibilité, nous allons tenter de terminer la partie 
back-end du projet afin de pouvoir proposer la solution au BDE.

En effet, lors de démonstrations d'évaluation à nos amis BDE, nous avons eu de 
nombreuses réaction très positives de leur part "Mais c'est génial on le veut !"


En vous souhaitant bon test et bonne relecture du code (qui a été réindenté
pour une lecture agréable).


